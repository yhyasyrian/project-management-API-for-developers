{
    "swagger": "2.0",
    "info": {
        "description": "This API is designed for developers, particularly freelancers, to manage their projects effectively. It includes features for tracking projects, clients, experiences, certifications, and project-related evaluations. Additionally, it allows for task management associated with clients and projects, monitoring bank balances, accessing banking transaction records, sending bank balances, and checking the status of ongoing projects. This comprehensive tool aims to streamline project management and enhance productivity for developers.",
        "version": "1.0.0",
        "title": "Project Management API for Developers",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "contact@yhyasyrian.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "127.0.0.1:8000",
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "user",
            "description": "CRUD operations for users, users can be: 'owner', 'admin', 'customer', can auth with jwt token and related with projects and tasks"
        },
        {
            "name": "project",
            "description": "CRUD operations for projects, and related to customer and task, and know the status of the project"
        },
        {
            "name": "experience",
            "description": "CRUD operations for experience"
        },
        {
            "name": "certification",
            "description": "CRUD operations for certifications"
        },
        {
            "name": "task",
            "description": "CRUD operations for tasks, and related to customer and project"
        },
        {
            "name": "bank",
            "description": "Know your bank balance and transaction records, and send money to your customers"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/project": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Get all projects",
                "description": "Get all projects with pagination",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "type": "boolean",
                                    "default": true
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "projects": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Project"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "Create a new project",
                "description": "Create a new project",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/CreateProjectModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done Create Project",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "422": {
                        "description": "Validation Errors",
                        "schema": {
                            "$ref": "#/components/schemas/ValidationErrors"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/components/schemas/ErrorServer"
                        }
                    }
                }
            }
        },
        "auth/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Login",
                "description": "Login with email and password",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Login object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "format": "email"
                                },
                                "password": {
                                    "type": "string",
                                    "minLength": 8
                                }
                            },
                            "required": [
                                "email",
                                "password"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Errors",
                        "schema": {
                            "$ref": "#/components/schemas/ValidationErrors"
                        }
                    },
                    "401": {
                        "description": "Fail login",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/components/schemas/TooManyRequests"
                        }
                    }
                }
            }
        },
        "auth/logout": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Logout",
                "description": "Logout with jwt token",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done Logout",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    }
                }
            }
        },
        "user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get all users",
                "description": "Get all users with pagination for admin",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "default": 1
                    }
                ],
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "type": "boolean",
                                    "default": true
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Register",
                "description": "Register with email and password, operation only for admin",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Register object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "format": "email"
                                },
                                "password": {
                                    "type": "string",
                                    "minLength": 8
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "email",
                                "password",
                                "name"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Done Register",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "422": {
                        "description": "Validation Errors",
                        "schema": {
                            "$ref": "#/components/schemas/ValidationErrors"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/components/schemas/TooManyRequests"
                        }
                    }
                }
            }
        },
        "user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by id",
                "description": "Get user by id for admin",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/UserInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/components/schemas/PageNotFound"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update user by id",
                "description": "Update user information by id for admin",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User object that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string",
                                    "enum": [
                                        "developer",
                                        "admin",
                                        "client",
                                        "user"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/components/schemas/PageNotFound"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "user"
                ],
                "summary": "Update user password by id",
                "description": "Update user password by id only for admin",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Password object that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "new_password": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "current_password",
                                "new_password"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/components/schemas/PageNotFound"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user by id",
                "description": "Delete user by id only for admin",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/components/schemas/PageNotFound"
                        }
                    }
                }
            }
        },
        "user/{idUser}/contact-information": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Add contact information for user",
                "description": "Add contact information for a specific user",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "name": "idUser",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Contact information object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ContactInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/components/schemas/PageNotFound"
                        }
                    }
                }
            }
        },
        "user/{idUser}/contact-information/{id}": {
            "patch": {
                "tags": [
                    "user"
                ],
                "summary": "Update contact information",
                "description": "Update contact information for a specific user",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "name": "idUser",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Contact information object to update",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/components/schemas/PageNotFound"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete contact information",
                "description": "Delete contact information for a specific user",
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "parameters": [
                    {
                        "name": "idUser",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/SuccessOperation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/components/schemas/AuthenticationError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/components/schemas/PageNotFound"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "jwt": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "JWT token for authentication. Format: 'Bearer {token}'"
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "required": [
                "name",
                "email",
                "role"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "developer",
                        "admin",
                        "client",
                        "user"
                    ]
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Project": {
            "type": "object",
            "required": [
                "name",
                "description",
                "content",
                "price",
                "start_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "domain": {
                    "type": "string",
                    "nullable": true,
                    "format": "url"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "success",
                        "moved",
                        "client_error",
                        "server_error",
                        "unknown"
                    ]
                },
                "start_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "end_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                }
            },
            "xml": {
                "name": "Project"
            }
        },
        "Tasks": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/Project",
                    "nullable": true,
                    "description": "The project name associated with the task. May be null if not loaded."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "in_progress",
                        "completed",
                        "cancelled"
                    ]
                },
                "client_view": {
                    "type": "boolean"
                },
                "information": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Tasks"
            }
        },
        "ContactInformation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "label": {
                    "type": "string",
                    "enum": [
                        "whatsapp",
                        "telegram",
                        "email"
                    ]
                },
                "value": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ContactInformation"
            }
        },
        "Experience": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}/\\d{2}/\\d{2}$"
                },
                "end_date": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}/\\d{2}/\\d{2}$"
                }
            }
        },
        "Certification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "pattern": "^\\d{4}/\\d{2}/\\d{2}$"
                },
                "url": {
                    "type": "string",
                    "format": "url"
                },
                "id_check": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Certification"
            }
        },
        "BankAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "bank": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BankAccount"
            }
        }
    },
    "components": {
        "schemas": {
            "CreateProjectModel": {
                "allOf": [
                    {
                        "$ref": "#/definitions/Project"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "client_id": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "client_id"
                        ]
                    }
                ]
            },
            "SuccessOperation": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean"
                    },
                    "data": {
                        "type": "object"
                    }
                }
            },
            "ValidationErrors": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "default": false
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "field1": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "field2": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AuthenticationError": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "default": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Unauthorized"
                    },
                    "errors": {
                        "type": "object",
                        "default": {}
                    }
                }
            },
            "ErrorServer": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "default": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Internal Server Error"
                    }
                }
            },
            "PageNotFound": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "default": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Page Not Found"
                    }
                }
            },
            "TooManyRequests": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "boolean",
                        "default": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Too Many Requests"
                    },
                    "errors": {
                        "type": "object",
                        "default": {}
                    }
                }
            },
            "UserInfo": {
                "allOf": [
                    {
                        "$ref": "#/definitions/User"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "projects": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/Project"
                                }
                            },
                            "contact_information": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/ContactInformation"
                                }
                            }
                        }
                    }
                ]
            }
        }
    }
}